<?php
/**
 * Setup pilotfish
 */
add_action('after_setup_theme', 'pilotfish_setup');

if (!function_exists('pilotfish_setup')):

    function pilotfish_setup() {

        global $content_width;

        /**
         * Global content width.
         */
        if (!isset($content_width))
            $content_width = 960;

        /**
         * pilotfish is now available for translations.
         * Add your files into /languages/ directory.
         */
	    load_theme_textdomain('pilotfish', TEMPLATEPATH . '/languages');

	    $locale = get_locale();
	    $locale_file = TEMPLATEPATH . "/languages/$locale.php";
	    if ( is_readable( $locale_file ) )
		    require_once( $locale_file );
						
        /**
         * Add callback for custom TinyMCE editor stylesheets. (editor-style.css)
         * @see http://codex.wordpress.org/Function_Reference/add_editor_style
         */
        add_editor_style();

        /**
         * This feature enables post and comment RSS feed links to head.
         * @see http://codex.wordpress.org/Function_Reference/add_theme_support#Feed_Links
         */
        add_theme_support('automatic-feed-links');

        /**
         * This feature enables post-thumbnail support for a theme.
         * @see http://codex.wordpress.org/Function_Reference/add_theme_support#Post_Thumbnails
         */
        add_theme_support('post-thumbnails');

        /**
         * This feature allows users to use custom background for a theme.
         * @see http://codex.wordpress.org/Function_Reference/add_custom_background
         */
        add_custom_background();

        /**
         * This feature adds a callbacks for image header display.
		 * In our case we are using this to display logo.
         * @see http://codex.wordpress.org/Function_Reference/add_custom_image_header
         */
        $options = get_option('pilotfish_theme_options');
		
		define('HEADER_TEXTCOLOR', '');
        define('HEADER_IMAGE', ''); // %s is the template dir uri (%s/images/default-logo.png)
        define('HEADER_IMAGE_WIDTH', 368); // use width and height appropriate for your theme
        define('HEADER_IMAGE_HEIGHT', 125);

        define('NO_HEADER_TEXT', true);

        // gets included in the admin header
        function pilotfish_admin_header_style() {
            ?><style type="text/css">
                #headimg {
                    border: none !important;
                    width: <?php echo HEADER_IMAGE_WIDTH; ?>px;
                    height: <?php echo HEADER_IMAGE_HEIGHT; ?>px;
                }
            </style><?php
        }

        add_custom_image_header('', 'pilotfish_admin_header_style');
		
        register_nav_menus(array(
	        'header-menu'  => __('Header Menu', 'pilotfish'),
			'footer-menu'  => __('Footer Menu', 'pilotfish')
		    )
	    );
		
    }

endif;


/**
 * Get our wp_nav_menu() fallback, wp_page_menu(), to show a home link.
 */
function pilotfish_page_menu_args( $args ) {
	$args['show_home'] = true;
	return $args;
}
add_filter( 'wp_page_menu_args', 'pilotfish_page_menu_args' );

/**
 * Remove div from wp_page_menu() and replace with ul.
 */
function pilotfish_wp_page_menu ($page_markup) {
    preg_match('/^<div class=\"([a-z0-9-_]+)\">/i', $page_markup, $matches);
        $divclass = $matches[1];
        $replace = array('<div class="'.$divclass.'">', '</div>');
        $new_markup = str_replace($replace, '', $page_markup);
        $new_markup = preg_replace('/^<ul>/i', '<ul class="'.$divclass.'">', $new_markup);
        return $new_markup; }

add_filter('wp_page_menu', 'pilotfish_wp_page_menu');

/**
 * Filter 'get_comments_number'
 * 
 * Filter 'get_comments_number' to display correct 
 * number of comments (count only comments, not 
 * trackbacks/pingbacks)
 *
 * Courtesy of Chip Bennett
 */
function pilotfish_comment_count( $count ) {  
	if ( ! is_admin() ) {
		global $id;
		$comments_by_type = &separate_comments(get_comments('status=approve&post_id=' . $id));
		return count($comments_by_type['comment']);
	} else {
		return $count;
	}
}
add_filter('get_comments_number', 'pilotfish_comment_count', 0);

/**
 * wp_list_comments() Pings Callback
 * 
 * wp_list_comments() Callback function for 
 * Pings (Trackbacks/Pingbacks)
 */
function pilotfish_comment_list_pings( $comment ) {
	$GLOBALS['comment'] = $comment;
?>
	<li <?php comment_class(); ?> id="li-comment-<?php comment_ID(); ?>"><?php echo comment_author_link(); ?></li>
<?php }

/**
 * Sets the post excerpt length to 40 characters.
 * Next few lines are adopted from Coraline
 */
function pilotfish_excerpt_length($length) {
    return 40;
}

add_filter('excerpt_length', 'pilotfish_excerpt_length');

/**
 * Returns a "Read more" link for excerpts
 */
function pilotfish_read_more() {
    return ' <a href="' . get_permalink() . '">' . __('<div class="read-more">Read more &#8250;</div><!-- end of .read-more -->', 'pilotfish') . '</a>';
}

/**
 * Replaces "[...]" (appended to automatically generated excerpts) with an ellipsis and pilotfish_read_more_link().
 */
function pilotfish_auto_excerpt_more($more) {
    return '<span class="ellipsis">&hellip;</span>' . pilotfish_read_more();
}

add_filter('excerpt_more', 'pilotfish_auto_excerpt_more');

/**
 * Adds a pretty "Read more" link to custom post excerpts.
 */
function pilotfish_custom_excerpt_more($output) {
    if (has_excerpt() && !is_attachment()) {
        $output .= pilotfish_read_more();
    }
    return $output;
}

add_filter('get_the_excerpt', 'pilotfish_custom_excerpt_more');


/**
 * This function removes inline styles set by WordPress gallery.
 */
function pilotfish_remove_gallery_css($css) {
    return preg_replace("#<style type='text/css'>(.*?)</style>#s", '', $css);
}

add_filter('gallery_style', 'pilotfish_remove_gallery_css');


/**
 * This function removes default styles set by WordPress recent comments widget.
 */
function pilotfish_remove_recent_comments_style() {
	global $wp_widget_factory;
	remove_action( 'wp_head', array( $wp_widget_factory->widgets['WP_Widget_Recent_Comments'], 'recent_comments_style' ) );
}
add_action( 'widgets_init', 'pilotfish_remove_recent_comments_style' );

    /**
     * A safe way of adding javascripts to a WordPress generated page.
     */
    if (!is_admin())
        add_action('wp_enqueue_scripts', 'pilotfish_js');

    if (!function_exists('pilotfish_js')) {

        function pilotfish_js() {
			// JS at the bottom for fast page loading. 
			// except for Modernizr which enables HTML5 elements & feature detects.
			wp_enqueue_script('modernizr', get_template_directory_uri() . '/js/pilotfish-modernizr.js', array('jquery'), '2.5.3', false);
            wp_enqueue_script('pilotfish-scripts', get_template_directory_uri() . '/js/pilotfish-scripts.js', array('jquery'), '1.1.0', true);
			wp_enqueue_script('pilotfish-plugins', get_template_directory_uri() . '/js/pilotfish-plugins.js', array('jquery'), '1.1.0', true);
        }

    }

    /**
     * A comment reply.
     */
        function pilotfish_enqueue_comment_reply() {
    if ( is_singular() && comments_open() && get_option('thread_comments')) { 
            wp_enqueue_script('comment-reply'); 
        }
    }

    add_action( 'wp_enqueue_scripts', 'pilotfish_enqueue_comment_reply' );
	
    /**
     * Where the post has no post title, but must still display a link to the single-page post view.
     */
    add_filter('the_title', 'pilotfish_title');

    function pilotfish_title($title) {
        if ($title == '') {
            return __('Untitled','pilotfish');
        } else {
            return $title;
        }
    }

    /**
     * WordPress Widgets start right here.
     */
    function pilotfish_widgets_init() {

        register_sidebar(array(
            'name' => __('Main Sidebar', 'pilotfish'),
            'description' => __('Area One - sidebar.php', 'pilotfish'),
            'id' => 'main-sidebar',
            'before_title' => '<div class="widget-title">',
            'after_title' => '</div>',
            'before_widget' => '',
            'after_widget' => ''
        ));

        register_sidebar(array(
            'name' => __('Home Widget 1', 'pilotfish'),
            'description' => __('Area Six - sidebar-home.php', 'pilotfish'),
            'id' => 'home-widget-1',
            'before_title' => '<div class="widget-title-home"><h3>',
            'after_title' => '</h3></div>',
            'before_widget' => '',
            'after_widget' => ''
        ));

        register_sidebar(array(
            'name' => __('Home Widget 2', 'pilotfish'),
            'description' => __('Area Seven - sidebar-home.php', 'pilotfish'),
            'id' => 'home-widget-2',
            'before_title' => '<div class="widget-title-home"><h3>',
            'after_title' => '</h3></div>',
            'before_widget' => '',
            'after_widget' => ''
        ));

        register_sidebar(array(
            'name' => __('Home Widget 3', 'pilotfish'),
            'description' => __('Area Eight - sidebar-home.php', 'pilotfish'),
            'id' => 'home-widget-3',
            'before_title' => '<div class="widget-title-home"><h3>',
            'after_title' => '</h3></div>',
            'before_widget' => '',
            'after_widget' => ''
        ));
    }
	
    add_action('widgets_init', 'pilotfish_widgets_init');



	/**
	 * 
	 * Show thumbnail
	 *
	 */
	function pilotfish_the_thumbnail() {

		global $post;

		$id = (int) $post->ID;
		if ( $id == 0 ) {
			return false;
		}

		$html = get_the_post_thumbnail($id, array(306,175));
		if(!empty($html)){
			echo $html;
		}
	}

	/**
	 * Register a Custom Post Type 
	 * Label: Project (for portfolio items)
	 *
	 */
	 
	add_action( 'init', 'create_post_type' );
	
	if (!function_exists('create_post_type')):
	
	function create_post_type() {
			register_post_type( 'project',
					array(
							'labels' => array(
									'name' => __( 'Projects' ),
									'singular_name' => __( 'Project' )
							),
					'public' => true,
					'has_archive' => true,
					'show_in_menu' => true, 
					'query_var' => true,
					'rewrite' => true,
					'capability_type' => 'post',
					'has_archive' => true, 
					'hierarchical' => false,
					'menu_position' => '5',
					'supports' => array('title',
					    'editor',
					    'author',
					    'thumbnail',
					    'excerpt',
					    'comments'
						)
					)
			);
	}
	
	endif;
	register_taxonomy("Skills", array("project"), array("hierarchical" => true, "label" => "Skills", "singular_label" => "Skill", "rewrite" => true));
 ?>
